"0","cv_opts = trainControl(method='cv', number=10)"
"0","results_nnet = train(quality~., "
"0","                     data=wine_train, "
"0","                     method='avNNet',"
"0","                     trControl=cv_opts,"
"0","                     tuneLength=6,"
"0","                     preProcess=c('center', 'scale'),"
"0","                     trace=F, "
"0","                     maxit=10)"
"0","results_nnet"
"1","Model Averaged Neural Network"
"1"," "
"1","

"
"1","5199"
"1"," samples"
"1","
"
"1","   9"
"1"," predictor"
"1","
"
"1","   2"
"1"," "
"1","classes:"
"1"," "
"1","'bad', 'good'"
"1"," "
"1","
"
"1","
"
"1","Pre-processing: centered (9), scaled (9)"
"1"," "
"1","
"
"1","Resampling:"
"1"," "
"1","Cross-Validated (10 fold)"
"1"," "
"1","
"
"1","Summary of sample sizes:"
"1"," "
"1","4680, 4679, 4679, 4679, 4679, 4679, ..."
"1"," "
"1","
"
"1","Resampling results"
"1"," across tuning parameters"
"1",":

"
"1","  size"
"1","  decay       "
"1","  Accuracy "
"1","  Kappa    "
"1","
"
"1","   1  "
"1","  0.0000000000"
"1","  0.7380228"
"1","  0.4279377"
"1","
"
"1","   1  "
"1","  0.0001000000"
"1","  0.7335994"
"1","  0.4240882"
"1","
"
"1","   1  "
"1","  0.0005623413"
"1","  0.7364851"
"1","  0.4279888"
"1","
"
"1","   1  "
"1","  0.0031622777"
"1","  0.7326364"
"1","  0.4135106"
"1","
"
"1","   1  "
"1","  0.0177827941"
"1","  0.7330210"
"1","  0.4181386"
"1","
"
"1","   1  "
"1","  0.1000000000"
"1","  0.7378320"
"1","  0.4338482"
"1","
"
"1","   3  "
"1","  0.0000000000"
"1","  0.7468719"
"1","  0.4416281"
"1","
"
"1","   3  "
"1","  0.0001000000"
"1","  0.7409071"
"1","  0.4259354"
"1","
"
"1","   3  "
"1","  0.0005623413"
"1","  0.7464862"
"1","  0.4435888"
"1","
"
"1","   3  "
"1","  0.0031622777"
"1","  0.7441800"
"1","  0.4367753"
"1","
"
"1","   3  "
"1","  0.0177827941"
"1","  0.7455250"
"1","  0.4396753"
"1","
"
"1","   3  "
"1","  0.1000000000"
"1","  0.7447577"
"1","  0.4380971"
"1","
"
"1","   5  "
"1","  0.0000000000"
"1","  0.7476404"
"1","  0.4447282"
"1","
"
"1","   5  "
"1","  0.0001000000"
"1","  0.7466807"
"1","  0.4418433"
"1","
"
"1","   5  "
"1","  0.0005623413"
"1","  0.7486038"
"1","  0.4419434"
"1","
"
"1","   5  "
"1","  0.0031622777"
"1","  0.7453320"
"1","  0.4391215"
"1","
"
"1","   5  "
"1","  0.0177827941"
"1","  0.7464888"
"1","  0.4333268"
"1","
"
"1","   5  "
"1","  0.1000000000"
"1","  0.7470646"
"1","  0.4437554"
"1","
"
"1","   7  "
"1","  0.0000000000"
"1","  0.7472577"
"1","  0.4363945"
"1","
"
"1","   7  "
"1","  0.0001000000"
"1","  0.7489866"
"1","  0.4429868"
"1","
"
"1","   7  "
"1","  0.0005623413"
"1","  0.7478339"
"1","  0.4440646"
"1","
"
"1","   7  "
"1","  0.0031622777"
"1","  0.7453335"
"1","  0.4347521"
"1","
"
"1","   7  "
"1","  0.0177827941"
"1","  0.7476438"
"1","  0.4378351"
"1","
"
"1","   7  "
"1","  0.1000000000"
"1","  0.7474492"
"1","  0.4412900"
"1","
"
"1","   9  "
"1","  0.0000000000"
"1","  0.7336057"
"1","  0.3846285"
"1","
"
"1","   9  "
"1","  0.0001000000"
"1","  0.7426430"
"1","  0.4258831"
"1","
"
"1","   9  "
"1","  0.0005623413"
"1","  0.7511020"
"1","  0.4443116"
"1","
"
"1","   9  "
"1","  0.0031622777"
"1","  0.7480280"
"1","  0.4411303"
"1","
"
"1","   9  "
"1","  0.0177827941"
"1","  0.7472595"
"1","  0.4392232"
"1","
"
"1","   9  "
"1","  0.1000000000"
"1","  0.7482188"
"1","  0.4393314"
"1","
"
"1","  11  "
"1","  0.0000000000"
"1","  0.7468731"
"1","  0.4334105"
"1","
"
"1","  11  "
"1","  0.0001000000"
"1","  0.7486012"
"1","  0.4459323"
"1","
"
"1","  11  "
"1","  0.0005623413"
"1","  0.7447573"
"1","  0.4263409"
"1","
"
"1","  11  "
"1","  0.0031622777"
"1","  0.7489899"
"1","  0.4335293"
"1","
"
"1","  11  "
"1","  0.0177827941"
"1","  0.7478350"
"1","  0.4322320"
"1","
"
"1","  11  "
"1","  0.1000000000"
"1","  0.7457211"
"1","  0.4298853"
"1","
"
"1","
"
"1","Tuning parameter 'bag' was held constant at a value of FALSE"
"1","
"
"1","Accuracy was used to select the optimal model using the largest value.
"
"1","The final values used for the model were size = 9, decay = 0.0005623413
 and bag = FALSE."
"1","
"
"0","ggplot(results_nnet)"
